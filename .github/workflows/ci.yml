# .github/workflows/ci.yml
name: CI

on: [push, pull_request]

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"        # ускоряем за счёт wheel-кэша
      - run: pip install -r requirements.txt
      - run: python -m spacy download ru_core_news_lg
      - run: pytest -q

  build:
    needs: test
    runs-on: ubuntu-latest
    permissions: {contents: read, packages: write}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Build & push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  code_scan:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      security-events: write      # требуется для загрузки результатов
    strategy:
      matrix:
        language: [python]
    steps:
      - uses: actions/checkout@v4
      - uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
      - uses: github/codeql-action/analyze@v2
      
  deploy_stage:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.STAGE_HOST }}
          username: ubuntu
          key: ${{ secrets.STAGE_SSH_KEY }}
          script: |
            docker pull ${{ env.IMAGE_NAME }}:${{ github.sha }}
            docker stop passport || true && docker rm passport || true
            docker run -d --name passport -p 8000:8000 \
                      ${{ env.IMAGE_NAME }}:${{ github.sha }}

